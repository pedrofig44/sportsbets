# Generated by Django 3.2.16 on 2025-06-19 14:59

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BetType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(choices=[('match_result', 'Match Result'), ('over_goals', 'Over Goals'), ('under_goals', 'Under Goals'), ('both_to_score', 'Both Teams to Score'), ('player', 'Player Markets'), ('handicap', 'Handicap'), ('total_points', 'Total Points'), ('set_games', 'Sets/Games'), ('other', 'Other')], default='other', max_length=50)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Bookmaker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('website', models.URLField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('code', models.CharField(help_text="Short code like 'FB' for Football", max_length=10, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('short_name', models.CharField(blank=True, help_text="Abbreviation like 'FCB'", max_length=10)),
                ('country', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='bets.sport')),
            ],
            options={
                'ordering': ['sport__name', 'name'],
                'unique_together': {('name', 'sport')},
            },
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('country', models.CharField(blank=True, help_text='Country or region', max_length=50)),
                ('division', models.CharField(choices=[('1', 'Division 1'), ('2', 'Division 2'), ('3', 'Division 3'), ('none', 'Tournament/Cup')], default='none', help_text='Division level (1, 2, 3) or none for tournaments', max_length=10)),
                ('competition_type', models.CharField(choices=[('championship', 'Championship Phase'), ('group_stage', 'Group Stage'), ('playoffs', 'Playoffs'), ('finals', 'Finals'), ('knockout', 'Knockout Phase'), ('regular_season', 'Regular Season')], default='regular_season', help_text='Type/phase of competition', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competitions', to='bets.sport')),
            ],
            options={
                'ordering': ['sport__name', 'name'],
                'unique_together': {('name', 'sport', 'division', 'competition_type')},
            },
        ),
        migrations.CreateModel(
            name='Bet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, help_text='When the bet was placed')),
                ('neutral_ground', models.BooleanField(default=False, help_text='Is this match on neutral ground?')),
                ('bet_description', models.TextField(blank=True, help_text='Additional details about the bet')),
                ('estimated_probability', models.DecimalField(decimal_places=2, help_text='Your estimated probability (%)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('bookmaker_odds', models.DecimalField(decimal_places=2, help_text='Decimal odds from bookmaker', max_digits=6, validators=[django.core.validators.MinValueValidator(1.01)])),
                ('stake', models.DecimalField(decimal_places=2, help_text='Amount staked (€)', max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('outcome', models.CharField(choices=[('win', 'Win'), ('loss', 'Loss'), ('push', 'Push'), ('void', 'Void'), ('pending', 'Pending')], default='pending', max_length=10)),
                ('profit_loss', models.DecimalField(decimal_places=2, default=0, help_text='Profit/Loss amount (€)', max_digits=10)),
                ('confidence_level', models.IntegerField(help_text='Confidence level (1-5)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('notes', models.TextField(blank=True, help_text='Personal notes about this bet')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('away_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_bets', to='bets.team')),
                ('bet_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bets', to='bets.bettype')),
                ('bookmaker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bets', to='bets.bookmaker')),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bets', to='bets.competition')),
                ('home_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_bets', to='bets.team')),
                ('sport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bets', to='bets.sport')),
            ],
            options={
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='bet',
            index=models.Index(fields=['date'], name='bets_bet_date_04e47d_idx'),
        ),
        migrations.AddIndex(
            model_name='bet',
            index=models.Index(fields=['sport'], name='bets_bet_sport_i_2dab10_idx'),
        ),
        migrations.AddIndex(
            model_name='bet',
            index=models.Index(fields=['outcome'], name='bets_bet_outcome_2a1af8_idx'),
        ),
        migrations.AddIndex(
            model_name='bet',
            index=models.Index(fields=['bookmaker'], name='bets_bet_bookmak_aab273_idx'),
        ),
    ]
